1)
Необходимо реализовать простого бота для выдачи зарплаты сотрудникам:
 class Employee с полями: givenName, surName, age, gender(enum MALE, FEMALE), role(enum STAFF, MANAGER, EXECUTIVE), dept, eMail, phone,	address, city, state (область), code (код области);

Реализовать паттерн builder (нельзя использовать lombok)
Переопределить toString()
Реализовать метод public static List<Employee> createShortList() - создает список сотрудников и заполняет его различными сотрдниками не менее 7 (Экземплярами класса Employee). Значения полей должны быть разнообразны.

class Accountant без полей:
public void paySalary(Employee employee); Выплату зарплаты реализовать через вывод в консоль сообщения о выплате
public void payPremium(Employee employee); Выплату премии реализовать через вывод в консоль сообщения о выплате. Процент премии хранится в enum role (STAFF = 10%, MANAGER = 20%, EXECUTIVE = 30%)

Задача: На основе написанных классов продемонстрируйте работу со стримами:
	Выплата премии женщинам сотрудникам
	Выплата зарплаты сотрудникам определенного департамента
	Выплата премии сотрудникам старше 30, работающим в определенном департаменте 
	Выплата зарплаты менеджерам
	Выплата премии стаффу

2)
Для своих реализованных классов Employee в лабораторной работе:

Создать и использовать Consumer Lambda Expression
Создать и использовать Function Lambda Expression
Создать и использовать Supplier Lambda Expression
Создать и использовать BiPredicate Lambda Expression

Кейсы необходимо придумать самостоятельно, главное, чтобы были реализованы данные функциональные интерфейсы

3)
На основании прошлой лабораторной работы cоздать по 2 примера использования следующих методов:
1. map и peek
2. findFirst и lazy операции
3. max, min
4. average, sum



